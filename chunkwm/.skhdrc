#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.

# Config Setup Like i3 Reference Card
# https://i3wm.org/docs/refcard.html

# Basics
alt - return : open -na /Applications/iTerm.app             # open new terminal
alt - h : chunkc tiling::window --focus west                # focus left
alt - j : chunkc tiling::window --focus south               # focus down
alt - k : chunkc tiling::window --focus north               # focus up
alt - l : chunkc tiling::window --focus east                # focus right
                                                            # focus parent
                                                            # toggle focus mode

# Moving windows
alt + shift - h : chunkc tiling::window --warp west         # move window left
alt + shift - j : chunkc tiling::window --warp south        # move window down
alt + shift - k : chunkc tiling::window --warp north        # move window up
alt + shift - l : chunkc tiling::window --warp east         # move window right

# Modifying windows
alt - f : chunkc tiling::window --warp-floating fullscreen  # toggle fullscreen
alt - v : chunkc set bsp_split_mode vertical                # split a window vertically
alt - h : chunkc set bsp_split_mode horizontal              # split a window horizontally
# Resize mode does not exist                                # resize mode

# Changing the container layout
# This isn't possible on macOS                              # default
                                                            # stacking
                                                            # tabbed

# Floating
alt + shift - space : chunkc tiling::window --toggle float  # toggle floating
# Floating works normally with mouse                        # drag floating

# Using workspaces
# Handled by System Preferences                             # switch to another workspace
shift + alt - 1 : chunkc tiling::window --send-to-desktop 1 # move a window to another workspace
shift + alt - 2 : chunkc tiling::window --send-to-desktop 2 # move a window to another workspace
shift + alt - 3 : chunkc tiling::window --send-to-desktop 3 # move a window to another workspace
shift + alt - 4 : chunkc tiling::window --send-to-desktop 4 # move a window to another workspace
shift + alt - 5 : chunkc tiling::window --send-to-desktop 5 # move a window to another workspace
shift + alt - 6 : chunkc tiling::window --send-to-desktop 6 # move a window to another workspace
shift + alt - 7 : chunkc tiling::window --send-to-desktop 7 # move a window to another workspace
shift + alt - 8 : chunkc tiling::window --send-to-desktop 8 # move a window to another workspace
shift + alt - 9 : chunkc tiling::window --send-to-desktop 9 # move a window to another workspace
shift + alt - 0 : chunkc tiling::window --send-to-desktop 10  # move a window to another workspace

# Opening applications / Closing windows
# Handled by System Preferences                             # open application launcher (spotlight)
shift + alt - q : chunkc tiling::window --close             # kill a window

# Restart / Exit
# chunkwm / skhd appear to hot reload                       # reload the configuration file
                                                            # restart inplace
                                                            # exit

# Interesting features from default example
# cmd - j : chunkc tiling::window --focus prev
# cmd - k : chunkc tiling::window --focus next
# equalize size of windows
# shift + alt - 0 : chunkc tiling::desktop --equalize

# swap window
# shift + alt - h : chunkc tiling::window --swap west
# shift + alt - j : chunkc tiling::window --swap south
# shift + alt - k : chunkc tiling::window --swap north
# shift + alt - l : chunkc tiling::window --swap east

# send window to desktop
# shift + alt - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
# shift + alt - z : chunkc tiling::window --send-to-desktop prev
# shift + alt - c : chunkc tiling::window --send-to-desktop next

# focus monitor
# ctrl + alt - z  : chunkc tiling::monitor -f prev
# ctrl + alt - c  : chunkc tiling::monitor -f next
# ctrl + alt - 1  : chunkc tiling::monitor -f 1
# ctrl + alt - 2  : chunkc tiling::monitor -f 2
# ctrl + alt - 3  : chunkc tiling::monitor -f 3

# increase region size
shift + alt - a : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
shift + alt - s : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
shift + alt - w : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
shift + alt - d : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east

# decrease region size
shift + cmd - a : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
shift + cmd - s : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
shift + cmd - w : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
shift + cmd - d : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east

# set insertion point for focused container
ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
ctrl + alt - h : chunkc tiling::window --use-insertion-point west
ctrl + alt - j : chunkc tiling::window --use-insertion-point south
ctrl + alt - k : chunkc tiling::window --use-insertion-point north
ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
# alt - d : chunkc tiling::window --toggle parent

# toggle window split type
alt - e : chunkc tiling::window --toggle split

# toggle sticky, float and resize to picture-in-picture size
alt - s : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --warp-floating pip-right

# float next window to be tiled
shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp
ctrl + alt - s : chunkc tiling::desktop --layout monocle
ctrl + alt - d : chunkc tiling::desktop --layout float

ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1
